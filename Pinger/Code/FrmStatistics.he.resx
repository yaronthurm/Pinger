<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="imagePingState.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAa
        EAAAAk1TRnQBSQFMAgEBAwEAARwBAAEcAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAA/0B/wP9Af8D/QH/AvsB/QH/AakBpgH3Af8BuAG1AfgB/wG7AbkB+AH/
        AbwBuQH4Af8BvAG5AfgB/wG7AbgB+AH/AbsBuAH4Af8BrgGrAfcB/wL8Af0B/wP9Af8D/QH/A/0B/xAA
        AwsBDwNBAXICVwFaAcACQwGEAesCJQGbAfUCVQFnAdgDTgGZAyQBNTAAAwYBCAM+AWsDFAEcVAAD/QH/
        A/0B/wH7AfoB/QH/AaQBoAH3Af8C8AH8Af8C8wH8Af8C6gH8Af8B6gHpAfwB/wHqAekB/AH/AesB6gH8
        Af8C9QH8Af8C7gH8Af8BpwGkAfcB/wL8Af0B/wP9Af8D/QH/DAACMAExAU0CRAF9AegCAAHhAf8CAAHv
        Af8CAAHwAf8CAAHwAf8CAAHwAf8CAAHpAf8CAAHGAf4DUAGeAwgBCyQAAwIBAwM/AW0BWQHAAV8B/ANU
        Aa4DCgEOUAAD/QH/AvoB/QH/AaMBnwH3Af8B8QHwAfwB/wHPAc0B+gH/ASsBIwHvAf8BQQE5AfAB/wFY
        AVIB8gH/AV4BWAHyAf8BRgE/AfEB/wEuASYB7wH/AdYB1AH6Af8B7wHuAfwB/wGoAaQB9wH/AvwB/QH/
        A/0B/wgAAzgBXAIHAb0B/AIAAe8B/wIAAfAB/wIAAfAB/wIBAfAB/wIAAfAB/wIAAfAB/wIAAfAB/wIA
        AfAB/wIAAeQB/wJWAVoBwgMHAQkfAAEBAy4BRwFPAZwBXQHzAXUB/wGIAf8BVwHQAWEB/gNIAYUDBAEG
        TAAC+gH9Af8BowGfAfcB/wLxAfwB/wHPAc0B+gH/ASoBIgHvAf8BHQEUAe4B/wGlAaIB9wH/A/0B/wP9
        Af8BrwGrAfgB/wEdARQB7gH/AS4BJQHvAf8B1QHTAfoB/wLvAfwB/wGoAaQB9wH/AvwB/QH/BAADHwEt
        AiEBpwH3AgIB8AH/AgkB8QH/Ag8B8gH/AhIB8gH/AhIB8gH/Ag8B8gH/Ah8B8gH/AnEB9wH/AisB8wH/
        AgAB8AH/AgAB4wH/Ak4BTwGXHAADHQEpAVYBdAFYAeEBXQH9AWwB/wFaAfsBaQH/AVEB9wFgAf8BQQGk
        AUMB+QM4AV0DAQECSAABqwGnAfcB/wHyAfEB/AH/Ac8BzQH6Af8BKgEiAe8B/wEdARQB7gH/AR0BFAHu
        Af8BxwHEAfkB/wP9Af8D/QH/AbwBugH5Af8BHQEUAe4B/wEdARQB7gH/AS4BJgHvAf8B1QHTAfoB/wHw
        Ae8B/AH/Aa4BqwH3Af8EAAJVAVgBtwIIAewB/wITAfIB/wIbAfMB/wKZAfkB/wKLAfkB/wIqAfQB/wIf
        AfMB/wK6AfsF/wL0Af4B/wIHAfEB/wIAAfAB/wIHAb4B/QMfASwUAAMPARQBWQFbAVkBxAFMAfABWgH/
        AVAB8gFfAf8BdgHyAYgB/wFmAe0BcwH/AT8B4wFOAf8BSgF6AU4B7AMnAToDAAEBRAABvwG9AfkB/wLz
        AfwB/wEqASIB7wH/AR0BFAHuAf8BHQEUAe4B/wFgAVoB8gH/A/0B/wP9Af8D/QH/AvsB/QH/AWIBWwHz
        Af8BHQEUAe4B/wEdARQB7gH/AS4BJgHvAf8B+gH5Af0B/wG9AboB+QH/AxYBHwIRAb8B/QIaAfMB/wIk
        AfQB/wItAfUB/wKNAfkF/wLVAf0B/wKAAfgJ/wKwAfsB/wICAfAB/wIAAfAB/wIAAegB/wJLAUwBjxAA
        AwcBCQNQAZ4BPQHcAUoB/wFCAecBUQH/AWgB6QF0Af8BggHpAYwB/wGHAegBkAH/AWwB4QF3Af8BLwHN
        AT0B/wFZAWIBWQHVAxcBIEQAAb8BvQH5Af8B7AHrAfwB/wEdARQB7gH/AR0BFAHuAf8BHQEUAe4B/wGe
        AZoB9wH/A/0B/wP9Af8D/QH/A/0B/wHRAc8B+gH/AR0BFAHuAf8BHQEUAe4B/wEdARQB7gH/AfcB9gH9
        Af8BvQG6AfkB/wM4AV4CEwHiAf8CKgH0Af8CNQH1Af8CPgH2Af8CRAH3Af8CvQH8Df8C5wH+Af8CKAHz
        Af8CCAHxAf8CAAHwAf8CAAHwAf8CWAFkAc8MAAMCAQMDQgF0ATkBswFAAf0BNgHcAUUB/wFWAd8BYwH/
        AXMB4gGDAf8BZAHPAWwB/wGDAd4BjAH/AY4B4AGWAf8BeAHZAYcB/wErAbcBOAH/A1YBtAMLAQ9AAAG/
        Ab0B+QH/AewB6wH8Af8BHQEUAe4B/wEdARQB7gH/AR0BFAHuAf8BoAGcAfcB/wP9Af8D/QH/A/0B/wHc
        AdsB+wH/AfcB9gH9Af8BHgEVAe4B/wEdARQB7gH/AR0BFAHuAf8B9wH2Af0B/wG+AbsB+QH/AkUBRgF+
        AiMB6wH/AjkB9gH/AkYB9wH/AlAB+AH/AlYB+QH/AnUB+gn/Av0C/wJfAfcB/wIdAfMB/wINAfEB/wIA
        AfAB/wIAAfAB/wI3AYwB7wsAAQEBMAExATABTQE0AX8BOgH1ASoB0AE5Af8BQAHSAU4B/wFrAdoBdQH/
        AV8BugFfAfsDQwF4AVUBdAFYAeQBkAHaAZcB/wGZAdsBnwH/AZEB1gGXAf8BWwG5AWIB/wM2AVlAAAG/
        Ab0B+QH/Ae0B7AH8Af8BHQEUAe4B/wEdARQB7gH/AR0BFAHuAf8BoAGcAfcB/wP9Af8D/QH/A/0B/wGR
        AYwB9gH/AvwB/QH/ASYBHgHvAf8BHQEUAe4B/wEdARQB7gH/AfcB9gH9Af8BvgG7AfkB/wJFAUYBfgIu
        AewB/wJIAfcB/wJWAfgB/wJiAfoB/wJpAfoB/wLSAf0J/wLFAfwB/wIyAfUB/wIhAfMB/wIPAfIB/wIA
        AfAB/wIAAfAB/wIzAY0B8AgAAx8BLAFMAWEBTgHkAR4BwgEtAf8BKgHEATgB/wFhAdEBawH/AVwBzQFm
        Af8DSAGGAwMBBAMsAUQBTQGXAV4B9gGhAdYBpwH/AasB2AGwAf8BXQFiAV4B0wMQARZAAAG+AbwB+QH/
        Au0B/AH/AR0BFAHuAf8BHQEUAe4B/wEdARQB7gH/AZ4BmgH2Af8D/QH/A/0B/wP9Af8BhgGBAfUB/wHU
        AdIB+gH/AVEBSwHyAf8BHQEUAe4B/wEdARQB7gH/AvcB/QH/Ab8BvQH5Af8COQE6AWACLgHlAf8CVQH4
        Af8CZQH6Af8CcwH7Af8CywH+Df8C8QH+Af8CQgH2Af8CIgHzAf8CDwHyAf8CAAHwAf8CAAHwAf8CVwFj
        AdEEAAMRARcBWAFbAVkByAERAa8BIAH/ARQBtAEiAf8BVAHHAV4B/wFfAcgBaAH/AVUBVgFVAbEDBwEK
        BAADAQECAT4BPwE+AWwBfwG/AYEB/gFZAYIBXwHsAyEBMEQAAb4BvAH5Af8C9gH8Af8BNAEsAfAB/wEd
        ARQB7gH/AR0BFAHuAf8BlgGSAfYB/wP9Af8D/QH/A/0B/wGHAYIB9QH/ATEBKQHvAf8BMQEpAe8B/wEd
        ARQB7gH/ATkBMQHwAf8C+wH9Af8BvgG7AfkB/wMYASICJQHIAf4CXwH5Af8CcQH7Af8CqQH9Cf8C0wH+
        Af8CvQH8Bf8CtwH7Af8CHwHzAf8CDQHxAf8CAAHwAf8CAAHpAf8DTAGSAwgBCwFQAVIBUAGjAQUBmQES
        Af8BAAGjAQ8B/wFDAbgBTQH/AV8BvwFoAf8BWQFjAVoB1QMSARgMAAMEAQYDSgGMAzIBUAMAAQFEAAGy
        Aa8B+AH/AeoB6QH8Af8B3gHcAfsB/wE1AS0B8AH/AR0BFAHuAf8BigGGAfUB/wL1AfwB/wP9Af8D/QH/
        AYgBgwH1Af8BHQEUAe4B/wEdARQB7gH/ATgBMAHwAf8B4gHhAfsB/wHmAeUB+wH/AbYBswH4Af8EAAJW
        AVgBuwJbAfUB/wJ1AfsB/wKTAf0B/wLgAf4B/wLvAf4B/wJwAfoB/wJYAfgB/wLKAfwB/wL+Av8CRwH1
        Af8CCAHxAf8CAAHwAf8CAAHFAf4DIAEvAT8BQAE/AW8BLgGIATcB/gEAAYsBBwH/ATMBoQE9Af8BYAGy
        AWcB/wFRAXsBVAHtASEBIgEhATEUAAMCAQMDAAEBSAAD/QH/Aa4BqwH3Af8B6gHpAfwB/wHeAd0B+wH/
        ATUBLQHwAf8BHQEUAe4B/wFuAWgB9AH/AdwB2gH7Af8BzAHKAfoB/wFWAU8B8gH/AR0BFAHuAf8BOQEx
        AfAB/wHiAeEB+wH/AeYB5QH7Af8BsgGvAfgB/wP9Af8EAAIhASIBMQIvAbAB+QJvAfsB/wJ4AfwB/wJ2
        AfwB/wJtAfoB/wJaAfkB/wJJAfcB/wI3AfUB/wJMAfYB/wIeAfMB/wIBAfAB/wIAAeQB/wJPAVEBnAQA
        A0MBeAELAXEBFAH/ASMBiAEsAf8BYAGpAWYB/wFNAZwBUAH6ATQBNQE0AVUDAAEBZAAD/QH/A/0B/wGu
        AasB9wH/AekB6AH8Af8B3gHdAfsB/wE8ATQB8AH/ASUBHAHvAf8BNwEvAfAB/wE0ASwB8AH/ASUBHAHv
        Af8BPgE2AfAB/wHiAeEB+wH/AeYB5QH7Af8BsgGvAfgB/wP9Af8D/QH/CAADOwFjAjYBwwH9AmYB+QH/
        AmQB+gH/AloB+QH/AkwB9wH/Aj0B9gH/Ai0B9AH/AhwB8wH/AgoB8QH/AgAB5QH/AlgBYAHIAwgBCwQA
        AwYBCAFTAVUBUwGtAWABpwFnAf8BWwGrAWIB/wFFAUYBRQF/AwIBA2gAA/0B/wP9Af8D/QH/Aa8BqwH3
        Af8B6QHoAfwB/wP9Af8D/QH/A/0B/wP9Af8D/QH/A/0B/wHmAeUB+wH/AbIBrwH4Af8D/QH/A/0B/wP9
        Af8MAAM0AVQCRgGHAewCPAHpAf8CSQH3Af8CPgH2Af8CMAH1Af8CIAHzAf8CDwHsAf8CAAHVAf8CUQFS
        AacDCgENDAADDwEUAVwBYwFcAdEDUwGqAwcBCWwAA/0B/wP9Af8D/QH/A/0B/wG1AbIB+AH/AbYBswH4
        Af8BtwG0AfgB/wG4AbUB+AH/AbcBtAH4Af8BtgGzAfgB/wG2AbMB+AH/AbcBtAH4Af8D/QH/A/0B/wP9
        Af8D/QH/EAADDgETA0QBegJYAV8ByQI2AZcB8wIbAbUB+wJRAXMB4ANRAaIDKAE9GAADFAEcAwsBD3AA
        AUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8DAAHwAQ8B/wEfBAAB4AEDAf4BDwQA
        AcABAQH8AQcEAAGAAQEB/AEDBAABgAEAAfgBAQYAAfABAQYAAeAHAAHABwABwAcAAYABQQcAAeEEAAGA
        AQABAQHzBAABgAIBAf8EAAHAAQEBAwH/BAAB4AEDAYcB/wQAAfABDwHPAf8CAAs=
</value>
  </data>
</root>